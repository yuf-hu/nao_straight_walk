import torch
import numpy as np

# 给定的数值和列表
value =   -0.544002
tensor_list = torch.tensor([
    [ 8.4310e-02, -7.7682e-01,  6.5300e-01, -1.8618e-01, -8.1037e-02,
      -1.0882e-01, -1.0544e+00,  5.6133e-01, -1.1956e-01,  1.9311e-01],
    [ 3.3096e-01, -5.6063e-01,  1.2929e+00,  6.4178e-01, -1.7544e-01,
      -4.0602e-01, -1.1425e+00,  1.0428e+00, -1.7915e-01, -1.2562e-01],
    [-5.3688e-02, -1.0594e+00,  9.9524e-01,  5.8580e-02,  1.0350e-01,
      -1.5140e-01, -1.0357e+00,  1.3150e+00, -1.4772e-01, -3.8501e-01],
    [ 1.1725e-01, -3.1407e-01,  1.0546e+00,  6.1595e-02, -3.7734e-02,
      -2.6936e-01, -6.5496e-01,  1.3369e+00, -2.3702e-01, -4.4495e-01],
    [ 3.1004e-01, -9.0684e-01,  1.4268e+00,  6.4842e-01, -1.1199e-02,
       1.2455e-01, -1.2789e+00,  1.1672e+00,  3.2999e-01, -2.3357e-01],
    [ 3.8565e-01, -7.5914e-01,  6.2560e-01,  6.7762e-01,  1.8134e-01,
       8.2964e-02, -1.3504e+00,  9.9598e-01, -1.5135e-01, -3.9531e-01],
    [-2.4148e-01, -1.1432e+00,  8.5545e-01,  1.1405e-01, -1.6270e-01,
      -4.8461e-02, -6.7196e-01,  1.5929e+00,  5.4035e-01, -1.2849e-01],
    [ 8.5741e-02, -7.8635e-01,  8.7861e-01,  1.3302e-01, -2.0171e-01,
       1.9291e-01, -3.7849e-01,  5.9821e-01, -3.2630e-01, -3.4716e-01],
    [ 1.8078e-01, -1.0656e+00,  9.4876e-01,  4.7648e-01, -1.4064e-01,
      -3.9370e-02,  4.9176e-02,  1.2680e+00, -2.0797e-01, -2.0587e-01],
    [ 9.9061e-02, -6.0713e-01,  4.5322e-01, -1.9620e-01, -8.5798e-02,
      -2.8243e-01, -1.0954e+00,  8.9650e-01, -4.1921e-01, -2.7500e-01],
    [-9.6062e-02, -1.1404e-01,  1.4293e+00, -3.5552e-01,  1.9188e-01,
      -3.2193e-01, -2.3652e-02,  4.0676e-01,  1.6217e-01, -3.1745e-01],
    [ 4.8178e-01, -7.7355e-01,  1.0769e+00,  1.5847e-01, -2.2977e-01,
      -2.8862e-01, -1.2410e+00,  1.2242e+00,  2.4183e-01, -2.6180e-01],
    [ 3.5992e-01, -1.3387e+00,  1.2720e+00,  1.2721e-01,  1.4645e-01,
       4.3716e-02, -6.3670e-01,  1.0787e+00,  6.1250e-02, -2.7079e-01],
    [ 8.7517e-02, -7.0843e-01,  1.4772e+00,  1.2355e-01, -2.7092e-01,
      -1.2683e-01, -1.2926e+00,  4.4044e-01, -2.0874e-01,  1.0219e-01],
    [ 3.3232e-01,  2.9134e-02,  1.2376e+00, -9.2531e-01,  4.2916e-02,
      -2.9495e-01, -3.7753e-02,  1.2610e+00,  7.0952e-04, -1.6792e-01],
    [ 2.7018e-02, -1.1010e+00,  1.1817e+00, -4.2887e-01, -9.8323e-02,
      -2.5676e-01, -2.2958e-01,  7.0403e-01, -6.4548e-01, -2.0715e-01],
    [ 3.1548e-01, -1.2264e+00,  1.3364e+00, -3.4012e-01,  6.4137e-02,
      -3.3979e-02, -4.2867e-02,  8.8815e-01,  1.0318e-01, -2.6368e-01],
    [ 1.8344e-01, -1.4350e+00,  7.6804e-01, -6.2449e-01, -2.9043e-01,
       2.6276e-03, -5.9278e-01,  1.0193e+00,  2.0391e-01, -1.8911e-01],
    [-3.7734e-02, -1.0801e-02,  1.1509e+00,  1.2406e-01, -2.2333e-02,
       1.1962e-01, -1.3104e+00,  9.1056e-01, -1.1541e-01,  1.4164e-01],
    [-2.2238e-01, -3.5480e-01,  7.8422e-01,  3.5343e-01, -2.3845e-01,
      -3.3580e-01, -3.9931e-01,  1.2721e+00, -4.1174e-01,  1.9195e-01],
    [ 1.7793e-01, -8.4203e-01,  9.5742e-01,  5.9515e-01, -2.8027e-01,
      -3.8475e-01, -7.6354e-01,  1.3191e+00, -2.2881e-01, -1.8202e-01],
    [ 2.4133e-01, -3.3467e-01,  1.0615e+00, -5.7758e-02, -8.6783e-02,
       2.3511e-01, -1.0385e+00,  6.4063e-01, -3.7336e-01,  1.4325e-01],
    [ 1.2480e-01, -8.8270e-01,  1.3442e+00,  4.3628e-01, -2.6451e-01,
      -1.5875e-01, -1.1423e+00,  7.8434e-01, -3.7247e-01, -1.6222e-01],
    [ 4.5246e-02, -1.3257e+00,  1.0476e+00, -1.4168e-01,  2.9311e-01,
      -4.0872e-01, -8.3046e-01,  9.6208e-01,  1.2754e-02, -2.5241e-01],
    [ 5.6577e-02, -9.8786e-01,  9.8390e-01, -3.3565e-01, -2.6884e-02,
      -1.5670e-01, -9.5228e-01,  5.9358e-01, -3.3505e-01,  3.5826e-01],
    [ 1.7413e-01, -8.3926e-01,  1.0804e+00, -5.9187e-02, -1.1966e-01,
       2.3125e-01, -4.8547e-01,  8.2296e-01,  2.2031e-01, -3.5988e-01],
    [ 1.6960e-01, -1.0295e+00,  1.0590e+00,  2.7395e-01, -2.5583e-01,
      -2.6495e-01, -1.1168e+00,  6.9262e-01, -5.7974e-02, -1.9362e-01],
    [-2.1704e-01, -1.0047e+00,  1.1453e+00, -5.5941e-01, -1.3423e-01,
      -1.1575e-01, -7.0571e-01,  9.0071e-01, -4.4791e-01, -2.5880e-01],
    [ 3.6562e-01, -1.1590e+00,  1.2150e+00,  4.5247e-01, -1.5421e-01,
      -5.2127e-02, -1.3886e+00,  1.2175e+00,  3.6767e-01, -1.2713e-01],
    [ 4.3288e-01, -1.0957e+00,  1.0233e+00,  7.8828e-02,  2.7962e-01,
      -1.8421e-01, -1.0857e+00,  1.3090e+00,  2.4230e-01, -1.1578e-01]
])

array = tensor_list.numpy()
# 计算每个元素与 1 的绝对差
diff = np.abs(array - value)

# 找到最小绝对差对应的位置
min_index = np.unravel_index(np.argmin(diff), diff.shape)

# 找到最接近 1 的元素
closest_value = array[min_index]
print(closest_value)
closest_index = min_index
print(min_index)